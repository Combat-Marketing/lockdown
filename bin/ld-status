#!/bin/bash
#ld-status

#===============================================================================
#
# FILE: 
#   ld-status
#
# REVISION:  
#   001
#
# WHEN TO USE: 
#   When you want to status IP Tables, IP Set and Fail2Ban in the proper
#   order.
#
# USAGE: 
#   ld-status [-d] [-h] [-v]
#   ld-status [--dry-run] [--help] [--verbose]
#
# DESCRIPTION:
#   Display the daemons status of each of the following:
#     * ipset
#     * iptables
#     * fail2ban
#
# OPTIONS:
#   -d | --dry-run
#      Echos the commands that would be executed rather than executing them
#   -h | --help
#      Run help function and exit
#   -v | --verbose
#      Output each line of the script after validations are parsed
#
# AUTHOR: Jason (@iDoMeteor)
#===============================================================================

# Strict mode
set -euo pipefail
IFS=$'\n\t'

# Values
DRY_RUN=''

# Help function
help () { 
  echo "Description:"
  echo "  Show daemon status of IP Tables, IP Set and Fail2Ban"
  echo "Usage:"
  echo "  `basename $0` [-d] [-f] [-v]"
  echo "  `basename $0` [--dry-run] [--force] [--verbose]"
  exit 0
}

# Check for arguments or provide help
if [ $# -eq 0 ] ; then
  help
fi

# Save origin
ORIGIN=`pwd`

# Parse command line arguments into variables
while :
do
    case ${1:-} in
      -d | --dry-run)
      DRY_RUN='echo'
      shift 1
    ;;
      -h | --help)
      help
    ;;
      -v | --verbose)
      VERBOSE=true
      shift 1
    ;;
      -*)
      echo "Error: Unknown option: $1" >&2
      exit 1
    ;;
      *)  # No more options
      break
    ;;
    esac
done

# Check verbosity
if [ -v VERBOSE ] ; then
  set -v
fi

# Execution commands
$DRY_RUN service iptables status
$DRY_RUN service ipset status
$DRY_RUN service fail2ban status
