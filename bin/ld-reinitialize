#!/bin/bash
#ld-reinitialize

#===============================================================================
#
# FILE: 
#   ld-reinitialize
#
# REVISION:  
#   001
#
# WHEN TO USE: 
#   What you have fubar'd everything and want to reboot IP Tables, IP Set
#   and Fail2Ban.
#
# USAGE: 
#   ld-reinitialize [-c lockdown.conf] [-h] [-o tarball.tar.gz] [-s] [-y]
#   ld-reinitialize [--config lockdown.conf] [--help] [--out tarball.tar.gz]
#                   [--skip-f2b] [--yes]
#
# DESCRIPTION:
#   This script will do the following things in the following order:
#     * Export current saved configurations, if available, to a temporary
#       location
#     * Export current running configurations, if available, to a temporary
#       location
#     * (Re-)download configured blacklist and country files
#     * Stop Fail2Ban
#     * Overwrite existing Fail2Ban configuration files with defaults
#     * Reset IP Tables and IP Set to their default state if running
#     * Remove IP Tables and IP Set configuration files and start them if not
#     * Re-configure IP Tables and IP Set according to config file
#     * Save IP Tables and IP Set configurations
#     * Start Fail2Ban
#     * Ensure all services are enabled
#    This script will not:
#     * Install anything
#     * Uninstall or disable anything
#
# OPTIONS:
#   -c | --config
#      Default = /etc/lockdown/conf/lockdown.conf
#      Use given configuration files
#   -d | --dry-run
#      Echos the commands that would be executed rather than executing them
#   -h | --help
#      Run help function and exit
#   -o | --out
#      Location to save archives
#   -s | --skip-f2b
#      Do not reboot F2B configuration files
#   -v | --verbose
#      Output each line of the script after validations are parsed
#   -y | --yes
#      Automatically say yes to everything
#
# AUTHOR: Jason White (@iDoMeteor)
#===============================================================================

# Strict mode
set -euo pipefail
IFS=$'\n\t'

# Help function
help () { 
  echo "Description:"
  echo "  XXX"
  echo "Usage:"
  echo "  `basename $0` [-f] [-v]"
  echo "  `basename $0` [--force] [--verbose]"
  exit 0
}

# Check for arguments or provide help
if [ $# -eq 0 ] ; then
  help
fi

# Save origin
ORIGIN=`pwd`

# Parse command line arguments into variables
while :
do
    case ${1:-} in
      -h | --help)
      help
      shift 1
    ;;
      -v | --verbose)
    VERBOSE=true
    shift 1
    ;;
      -*)
    echo "Error: Unknown option: $1" >&2
    exit 1
    ;;
      *)  # No more options
    break
    ;;
    esac
done

# Validate required arguments

# Set necessary defaults

# Check verbosity
if [ -v VERBOSE ] ; then
  set -v
fi


# Stop all services
# Re-run setup with -f, etc
# Cleanup
