#!/bin/bash
#ld-export

#===============================================================================
#
# FILE: 
#   ld-export
#
# REVISION:  
#   001
#
# WHEN TO USE:
#   When you want to save your current configurations to some specific location.
#
# USAGE: 
#   ld-export
#   ld-export [--etc]
#   ld-export [--path /path/to/export] [--tmp /tmp]
#   ld-export [-e]
#   ld-export [-p /path/to/export] [-t /tmp]
#
# DESCRIPTION:
#   Saves current configuration of IP Tables, IP Set and Fail2Ban as a set of
#   files and directories in the directory specified (or pwd when not set).
#   If any of the services are not running, their existing configuration file
#   from /etc will be used if it exists.
#
# OPTIONS:
#   -d | --dry-run
#      Echos the commands that would be executed rather than executing them
#   -e | --etc
#      Export currently running config of IP Tables & IP Set to /etc
#   -h | --help
#      Run help function and exit
#   -p | --path
#      Path or filename to save data to
#   -t | --tmp
#      Default = /tmp
#      Provide an alternate location to save current configuration
#   -v | --verbose
#      Output each line of the script after validations are parsed
#
# AUTHOR: Jason (@iDoMeteor)
#===============================================================================

# Strict mode
set -euo pipefail
IFS=$'\n\t'

# Values
COMPRESS=1
DATE=`date +%Y%m%d%H%M%S`
ETC=0
DRY_RUN=''
TAG="lockdown-$DATE"
ORIGIN="`pwd`"
PERMANENT=0
SAVE_PATH="`pwd`"
TMP_LOCATION="/tmp"
VERBOSE=0

# Help function
help () { 
  echo "Description:"
  echo "  Saves current configuration of IP Tables, IP Set and Fail2Ban as a set of"
  echo "  files and directories in the directory specificed (or /etc when not set)."
  echo "  If any of the services are not running, their existing configuration file"
  echo "  from /etc will be used if it exists."
  echo "Usage:"
  echo "  `basename $0` [-d] [-h] [-p] [-v]"
  echo "  `basename $0` [--dry-run] [--help] [--path /save/path] [--verbose]"
  exit 0
}

# Check for arguments or provide help
if [ $# -eq 0 ] ; then
  help
fi

# Parse command line arguments into variables
while :
do
    case ${1:-} in
      -c | --compress)
      COMPRESS=1
      shift 1
    ;;
      -d | --dry-run)
      DRY_RUN='echo'
      shift 1
    ;;
      -e | --etc)
      ETC=1
      shift 1
    ;;
      -h | --help)
      help
    ;;
      -p | --path)
      SAVE_PATH=$2
      shift 2
    ;;
      -t | --tmp)
      TMP_LOCATION=$2
      shift 2
    ;;
      -v | --verbose)
      VERBOSE=1
      shift 1
    ;;
      -*)
      echo "Error: Unknown option: $1" >&2
      exit 1
    ;;
      *)  # No more options
      break
    ;;
    esac
done

# Check save path exists
if [ ! -d "$SAVE_PATH" ]
then
  echo "Output location $SAVE_PATH could not be found, cannot continue"
  exit 1
fi

# Check verbosity
if (( VERBOSE ))
then
  set -v
fi

# Special case scenario
if (( ETC ))
then
  $DRY_RUN iptables-save > /etc/sysconfig/iptables
  $DRY_RUN ipset -S > /etc/ipset.conf
  exit 0
fi

if [ "/etc" -eq "$SAVE_PATH" ]
then
  echo "You must use ld-export -e or ld-export --etc to export to /etc"
  help
  exit 1
fi

# Backup currently saved configuration
if (( ETC ))
then
  $DRY_RUN tar czf "$SAVE_PATH/$TAG.tar.gz" \
    /etc/fail2ban* \
    /etc/ipset* \
    /etc/lockdown* \
    /etc/sysconfig/ip?tables*
else
  # Set up for running configuration export
  $DRY_RUN mkdir -p "$TMP_LOCATION/$TAG/etc"
  $DRY_RUN cd "$TMP_LOCATION/$TAG"
  # Save IP Tables & IP Set rules to temp location
  $DRY_RUN iptables-save > iptables.bak
  $DRY_RUN ipset -S > etc/ipset.conf
  # Copy Fail2Ban configs to temp location
  $DRY_RUN /bin/cp -ar /etc/fail2ban etc/
  # Copy Lockdown configs to temp location
  $DRY_RUN /bin/cp -ar /etc/lockdown etc/

  if (( COMPRESS ))
  then
    # Tar them and move them to destination
    $DRY_RUN tar czf "$SAVE_PATH/$TAG.tar.gz" etc
  else
    # Move uncompressed files to save path
    $DRY_RUN mv "$TMP_LOCATION/$TAG" "$SAVE_PATH"
  fi

  # Clean up
  $DRY_RUN cd $ORIGIN
  $DRY_RUN /bin/rm -rf "$TMP_LOCATION/$TAG"
fi


exit 0
