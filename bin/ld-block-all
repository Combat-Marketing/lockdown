#!/bin/bash
#ld-block-all

#===============================================================================
#
# FILE:
#   ld-block-all
#
# REVISION:
#   001
#
# WHEN TO USE:
#   When you are seriously panicing and need to lock er'than down now!
#
# USAGE:
#   ld-block-all [-d] [-h] [-i] [-n] [-p] [-t /tmp] [-v] [-y]
#   ld-block-all [--dry-run] [--help] [--ip] [--notmp] [--permanent]
#                            [--tmp /tmp] [--verbose] [--yes]
#
# DESCRIPTION:
#   This script will backup your current configuration to a temporary location
#   and completely reboot IP tables and IP set with deny all policies as well
#   as clear all temporary data from Fail2Ban.  The temporary location may be
#   specified by the user, and will be output in the report.
#
#   Current saved configurations will only be reset if the permanent option
#   is supplied.
#
# OPTIONS:
#   -d | --dry-run
#      Echos the commands that would be executed rather than executing them
#   -i | --ip
#      *Required*
#      IP of the SSH client connected to this machine, don't
#      lock yourself out!
#      TIP: To set this automatically, call with:
#        ld-block-all -y -i `netstat -putan | awk '/:22 / && /ESTABLISHED/ {split($5,result,":"); print result[1]}'`
#   -h | --help
#      Run help function and exit
#   -n | --notmp
#      Do not save currently running configuration
#   -l | --location
#      Default: ./
#      Provide an alternate directory to save current configuration
#   -p | --permanent
#      Make changes permanent
#   -v | --verbose
#      Output each line of the script after validations are parsed
#   -y | --yes
#      **Requred**
#      Required to actually save as a safeguard
#
# CAVEATS:
#   Options -n and -t are mutually exclusive which is not checked so if you
#   do something silly like that the consequences are unknown.
#
# AUTHOR: Jason (@iDoMeteor)
#===============================================================================

# Strict mode
set -euo pipefail
IFS=$'\n\t'

# Values
BACKUP=1
DRY_RUN=''
IP_SELF=''
PERMANENT=0
TMP_LOCATION='.'
VERBOSE=0
YES=0

# Help function
help () {
  echo "Description:"
  echo "  This script will backup your current configuration to a temporary location"
  echo "  and completely reboot IP tables and IP set with deny all policies as well"
  echo "  as clear Fail2Ban blocks.  The temporary location may be specified by the"
  echo "  user, otherwise defaults to your current directory."
  echo
  echo "  Current saved configurations will only be backed up if the permanent option"
  echo "  is supplied.  The currently running configuration will be saved regardless,"
  echo "  unless --no-backup is used."
  echo
  echo "  Omitting -y or --yes is the same as passing --help, nothing will happen."
  echo
  echo "Usage:"
  echo "  `basename $0` [-d] [-h] [-i ssh_client_ip] [-n] [-l /tmp] [-p] [-v] [-y]"
  echo "  `basename $0` [--dry-run] [--help] [--ip ssh_client_ip] [--no-backup] [--location /tmp] [--permanent] [--verbose] [--yes]"
  exit 0
}

# Check for arguments or provide help
if [ $# -eq 0 ] ; then
  help
fi

# Parse command line arguments into variables
while :
do
    case ${1:-} in
      -d | --dry-run)
      DRY_RUN='echo'
      shift 1
    ;;
      -i | --ip)
      IP_SELF=$2
      shift 2
    ;;
      -h | --help)
      help
    ;;
      -n | --no-backup)
      BACKUP=0
      shift 1
    ;;
      -p | --permanent)
      PERMANENT=1
      shift 1
    ;;
      -l | --location)
      TMP_LOCATION=$2
      shift 2
    ;;
      -v | --verbose)
      VERBOSE=1
      shift 1
    ;;
      -y | --yes)
      YES=1
      shift 1
    ;;
      -*)
      echo "Error: Unknown option: $1" >&2
      exit 1
    ;;
      *)  # No more options
      break
    ;;
    esac
done

# Do not allow accidental usage
if (( ! YES ))
then
  echo "Cautiously refusing to proceed without --yes."
  help
fi

# Check verbosity
if [ -z $IP_SELF ] || [ ! -z `ipcalc -c $IP_SELF` ]
then
  echo "You must supply a valid IP with -i to prevent locking yourself out!"
  exit 1
fi

# Check verbosity
if (( VERBOSE )) ; then
  set -v
fi

# Save and back currently saved configuration if making permanent
if (( PERMANENT )) && (( BACKUP ))
then
  $DRY_RUN ld-export --path "$TMP_LOCATION"
elif (( BACKUP ))
then
  $DRY_RUN iptables-save > ./iptables-running-config.save
  $DRY_RUN ipset -S > ./ipset-running-config.save
fi

# Flush all standard and custom chains
$DRY_RUN iptables -F
# Accept all on all chains
$DRY_RUN iptables -P INPUT ACCEPT
$DRY_RUN iptables -P FORWARD ACCEPT
$DRY_RUN iptables -P OUTPUT ACCEPT
# Clear IP set
$DRY_RUN ipset flush
# Allow loopback
$DRY_RUN iptables -I INPUT 1 -i lo -j ACCEPT
# Allow DNS
$DRY_RUN iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
# Whitelist own IP
$DRY_RUN iptables -I INPUT -s $IP_SELF -j ACCEPT
$DRY_RUN iptables -I OUTPUT -d $IP_SELF -j ACCEPT
# Accept all on all chains
$DRY_RUN iptables -P INPUT DROP
$DRY_RUN iptables -P FORWARD DROP
$DRY_RUN iptables -P OUTPUT DROP

# Save configurations permanently if instructed to do so
if (( PERMANENT ))
then
  $DRY_RUN ld-save --yes
fi

exit 0
